name: Build with CMake

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  BUILD_TYPE: Release
  QT_VERSION: 6.8.3

jobs:
  build-desktop:
    name: Build (Desktop)
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        qt_target: [gcc_64, msvc2019_64, clang_64]
    runs-on: ${{ matrix.os }}
    env:
      QT_PATH: $HOME/Qt/${{ env.QT_VERSION }}/${{ matrix.qt_target }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ env.QT_VERSION }}
          target: ${{ matrix.qt_target }}

      - name: Configure CMake
        run: |
          cmake -B build \
            -DQT_PATH="${{ env.QT_PATH }}" \
            -DCMAKE_PREFIX_PATH="${{ env.QT_PATH }}/lib/cmake/Qt6;${{ env.QT_PATH }}/lib/cmake" \
            -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}

      - name: Build
        run: cmake --build build --config ${{ env.BUILD_TYPE }}

      - name: Run tests
        run: ctest --test-dir build

  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest
    env:
      QT_PATH: $HOME/Qt/${{ env.QT_VERSION }}/gcc_64

    steps:
      - uses: actions/checkout@v4
      - uses: jurplel/install-qt-action@v4
        with:
          version: ${{ env.QT_VERSION }}
          target: android
      - run: |
          chmod +x ./config/android/gradlew
          cmake -B build-android \
            -DQT_PATH="${{ env.QT_PATH }}" \
            -DCMAKE_PREFIX_PATH="${{ env.QT_PATH }}/lib/cmake/Qt6;${{ env.QT_PATH }}/lib/cmake" \
            -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
      - run: cmake --build build-android --config ${{ env.BUILD_TYPE }}
      - uses: actions/upload-artifact@v4
        with:
          name: TestApp-android-apk
          path: config/android/app/build/outputs/apk/debug/*.apk

  build-ios:
    name: Build iOS App
    runs-on: macos-latest
    env:
      QT_PATH: $HOME/Qt/${{ env.QT_VERSION }}/ios

    steps:
      - uses: actions/checkout@v4
      - uses: jurplel/install-qt-action@v4
        with:
          version: ${{ env.QT_VERSION }}
          target: ios
      - run: |
          cmake -B build-ios \
            -DQT_PATH="${{ env.QT_PATH }}" \
            -DCMAKE_PREFIX_PATH="${{ env.QT_PATH }}/lib/cmake/Qt6;${{ env.QT_PATH }}/lib/cmake" \
            -DCMAKE_SYSTEM_NAME=iOS \
            -DCMAKE_OSX_SYSROOT=iphoneos \
            -DCMAKE_OSX_ARCHITECTURES=arm64 \
            -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
            -G Ninja
      - run: cmake --build build-ios

  build-wasm:
    name: Build WebAssembly (WASM)
    runs-on: ubuntu-latest
    env:
      QT_PATH: $HOME/Qt/${{ env.QT_VERSION }}/wasm_32

    steps:
      - uses: actions/checkout@v4
      - run: |
          git clone https://github.com/emscripten-core/emsdk.git
          cd emsdk && ./emsdk install latest && ./emsdk activate latest
          source emsdk_env.sh
      - uses: jurplel/install-qt-action@v4
        with:
          version: ${{ env.QT_VERSION }}
          target: wasm_32
      - run: |
          cmake -B build-wasm \
            -DQT_PATH="${{ env.QT_PATH }}" \
            -DCMAKE_PREFIX_PATH="${{ env.QT_PATH }}/lib/cmake/Qt6;${{ env.QT_PATH }}/lib/cmake" \
            -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
            -DCMAKE_TOOLCHAIN_FILE=$PWD/emsdk/upstream/emscripten/cmake/Modules/Platform/Emscripten.cmake \
            -DCMAKE_CROSSCOMPILING_EMULATOR=$PWD/emsdk/node/*/bin/node
      - run: cmake --build build-wasm

  finalize:
    name: Final Step
    needs: [build-desktop, build-android, build-ios, build-wasm]
    runs-on: ubuntu-latest
    steps:
      - run: echo "✅ Tous les builds multiplateformes sont terminés avec succès."
